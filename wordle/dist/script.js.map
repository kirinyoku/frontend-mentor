{"version":3,"sources":["script.js"],"names":["currentGuessCount","tileNumber","currentGuess","document","querySelector","concat","guessTiles","querySelectorAll","keyboardKeys","result","helpButton","refreshButton","helpMenu","helpMenuClose","controller","AbortController","signal","letterPattern","words","guessWord","data","randomItem","Math","floor","random","length","localStorage","setItem","getSolution","fetch","then","res","json","getWords","addAnimDelay","i","delay","tileWrapperList","j","style","animationDelay","addAnimation","element","animName","dataset","animation","getKey","letter","typeLetter","currentTile","textContent","letters","eraseLetter","slice","checkLetters","getItem","state","includes","parentElement","checkGuess","guess","abort","clear","addGuessToData","addGuessToStorage","submitGuess","setTimeout","openHelp","display","closeHelp","refreshGame","location","reload","window","addEventListener","_localStorage$getItem","split","join","e","console","log","target","key","test","toLocaleLowerCase","dataKey","currentTarget"],"mappings":"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","file":"script.js","sourcesContent":["// guess counter\r\nlet currentGuessCount = 1;\r\n// tile counter\r\nlet tileNumber = 0;\r\n// current row of guess\r\nlet currentGuess = document.querySelector(`#guess${currentGuessCount}`);\r\n// array of tiles in the current row of guess\r\nlet guessTiles = document.querySelectorAll(`#guess${currentGuessCount} .guess__tile`);\r\n// array of keyboard keys\r\nconst keyboardKeys = document.querySelectorAll('.keyboard__key');\r\n// element for display result\r\nconst result = document.querySelector('.result__info');\r\n// header navigation buttons\r\nconst helpButton = document.querySelector('#help-button');\r\nconst refreshButton = document.querySelector('#refresh-button');\r\n// help menu \r\nconst helpMenu = document.querySelector('#help');\r\nconst helpMenuClose = document.querySelector('.modal__close > img');\r\n// controller for event listener \r\nconst controller = new AbortController();\r\nconst { signal } = controller;\r\n// regular expression to test a string for a letter\r\nconst letterPattern = /^[A-Za-z][A-Za-z0-9]*$/;\r\n\r\n// list of words for guess\r\nlet words = [];\r\n\r\nconst guessWord = (data) => {\r\n\tconst randomItem = Math.floor(Math.random() * (data.length - 1)) + 1;\r\n\tlocalStorage.setItem('solution', data[randomItem]);\r\n}\r\n\r\nconst getSolution = () => {\r\n\tfetch('../words.json')\r\n\t.then(function(res) {\r\n\t\treturn res.json();\r\n\t})\r\n\t.then(function(data) {\r\n\t\tguessWord(data);\r\n\t})\r\n}\r\n\r\nconst getWords = () => {\r\n\tfetch('../words.json')\r\n\t.then(function(res) {\r\n\t\treturn res.json();\r\n\t})\r\n\t.then(function(data) {\r\n\t\twords = data;\r\n\t})\r\n} \r\n\r\n// adding animation-delay to the tile wrappers (to animate the flipping of tiles)\r\nconst addAnimDelay = () => {\r\n\tfor (let i = 1; i <= 6; i++) {\r\n\t\tlet delay = 0;\r\n\t\tconst tileWrapperList = document.querySelectorAll(`#guess${i} > div`);\r\n\t\tfor (let j = 0; j < tileWrapperList.length; j++){\r\n\t\t\ttileWrapperList[j].style.animationDelay = `${delay}ms`;\r\n\t\t\tdelay += 150;\r\n\t\t};\r\n\t};\r\n};\r\n\r\nconst addAnimation = (element, animName) => {\r\n\telement.dataset.animation = animName;\r\n};\r\n\r\nconst getKey = (letter) => {\r\n\treturn document.querySelector(`.keyboard__key[data-key=${letter}]`);\r\n}\r\n\r\nconst typeLetter = (letter) => {\r\n  if (tileNumber <= 4) {\r\n\t\tlet currentTile = guessTiles[tileNumber];\r\n    addAnimation(currentTile, 'pop');\r\n    currentTile.textContent = letter;\r\n    currentGuess.dataset.letters += letter;\r\n    tileNumber += 1;\r\n  };\r\n};\r\n\r\nconst eraseLetter = () => {\r\n\tif (tileNumber > 0) {\r\n\t\ttileNumber -= 1;\r\n\t\tlet currentTile = guessTiles[tileNumber];\r\n\t\tcurrentTile.textContent = '';\r\n\t\tcurrentTile.dataset.animation = 'idle';\r\n\t\tcurrentGuess.dataset.letters = currentGuess.dataset.letters.slice(0, -1);\r\n\t};\r\n};\r\n\r\nconst checkLetters = () => {\r\n\tfor (let i = 0; i < guessTiles.length; i++) {\r\n\t\tlet letter = guessTiles[i].textContent;\r\n\t\tif (letter === localStorage.getItem('solution')[i]) {\r\n\t\t\tguessTiles[i].dataset.state = 'correct';\r\n\t\t\tgetKey(letter).dataset.state = 'correct';\r\n\t\t} else if (localStorage.getItem('solution').includes(letter)) {\r\n\t\t\tguessTiles[i].dataset.state = 'present';\r\n\t\t\tgetKey(letter).dataset.state = 'present';\r\n\t\t} else {\r\n\t\t\tguessTiles[i].dataset.state = 'absent';\r\n\t\t\tgetKey(letter).dataset.state = 'absent';\r\n\t\t};\r\n\t\taddAnimation(guessTiles[i].parentElement, 'flip');\r\n\t\taddAnimation(guessTiles[i], 'idle');\r\n\t};\r\n};\r\n\r\nconst checkGuess = () => {\r\n\tif (currentGuess.dataset.guess === localStorage.getItem('solution')) {\r\n\t\tcontroller.abort();\r\n\t\tlocalStorage.clear();\r\n\t\tresult.textContent = 'You guessed the word! ðŸ¥³';\r\n\t} else if (currentGuessCount === 6) {\r\n\t\tcontroller.abort();\r\n\t\tresult.textContent = localStorage.getItem('solution');\r\n\t\tlocalStorage.clear();\r\n\t} else {\r\n\t\ttileNumber = 0;\r\n\t\tcurrentGuessCount += 1;\r\n\t\tcurrentGuess = document.querySelector(`#guess${currentGuessCount}`);\r\n\t\tguessTiles = document.querySelectorAll(`#guess${currentGuessCount} .guess__tile`);\r\n\t\tresult.textContent = '';\r\n\t};\r\n}\r\n\r\nconst addGuessToData = () => {\r\n\tcurrentGuess.dataset.guess = currentGuess.dataset.letters;\r\n}\r\n\r\nconst addGuessToStorage = () => {\r\n\tlocalStorage.setItem('guess', [localStorage.getItem('guess'), currentGuess.dataset.guess]);\r\n}\r\n\r\nconst submitGuess = () => {\r\n\tif (words.includes(currentGuess.dataset.letters)) {\r\n\t\tcheckLetters();\r\n\t\taddGuessToData();\r\n\t\taddGuessToStorage();\r\n\t\tcheckGuess();\r\n\t} else {\r\n\t\taddAnimation(currentGuess, 'shake');\r\n\t\tresult.textContent = 'isn\\'t a word';\r\n\t\tsetTimeout(() => {\r\n\t\t\taddAnimation(currentGuess, 'idle');\r\n\t\t\tresult.textContent = '';\r\n\t\t}, 600)\r\n\t}\r\n};\r\n\r\nconst openHelp = () => {\r\n\thelpMenu.style.display = 'flex';\r\n}\r\n\r\nconst closeHelp = () => {\r\n\thelpMenu.style.display = 'none';\r\n}\r\n\r\nconst refreshGame = () => {\r\n\tlocalStorage.clear();\r\n\tlocation.reload();\r\n}\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n\tif (!localStorage.getItem(\"solution\")) {\r\n\t\tgetSolution();\r\n\t}\r\n\tgetWords();\r\n\taddAnimDelay();\r\n\tif (localStorage.getItem(\"guess\")?.length > 0) {\r\n\t\tfor (let i = 1; i <= localStorage.getItem(\"guess\").split(',').join('').length; i++){\r\n\t\t\ttypeLetter(localStorage.getItem(\"guess\").split(',').join('')[i-1]);\r\n\t\t\tif (i !== 0 && i % 5 === 0) {\r\n\t\t\t\tcheckLetters();\r\n\t\t\t\tcurrentGuess.dataset.guess = currentGuess.dataset.letters;\r\n\t\t\t\tcheckGuess();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trefreshButton.addEventListener('click', () => {\r\n\t\trefreshGame();\r\n\t})\r\n\thelpButton.addEventListener('click', () => {\r\n\t\topenHelp();\r\n\t})\r\n\thelpMenu.addEventListener('click', (e) => {\r\n\t\tconsole.log(e.target)\r\n\t\tif (e.target === helpMenu || e.target === helpMenuClose) {\r\n\t\t\tcloseHelp();\r\n\t\t}\r\n\t})\r\n});\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n\tif (e.key.length === 1 && letterPattern.test(e.key)) {\r\n\t\ttypeLetter(e.key.toLocaleLowerCase());\r\n\t} else if (e.key === 'Backspace') {\r\n\t\teraseLetter();\r\n\t} else if (e.key === 'Enter' && tileNumber === 5 && currentGuessCount <= 6) {\r\n\t\tsubmitGuess();\r\n\t};\r\n}, { signal });\r\n\r\nfor (let i = 0; i < keyboardKeys.length; i++) {\r\n\tkeyboardKeys[i].addEventListener('click', (e) => {\r\n\t\tlet dataKey = e.currentTarget.dataset.key;\r\n\t\tif (dataKey.length === 1 && letterPattern.test(dataKey)) {\r\n\t\t\ttypeLetter(dataKey);\r\n\t\t} else if (dataKey === 'Backspace') {\r\n\t\t\teraseLetter();\r\n\t\t} else if (dataKey === 'Enter' && tileNumber === 5 && currentGuessCount <= 6) {\r\n\t\t\tsubmitGuess();\r\n\t\t};\r\n\t});\r\n}\r\n"]}