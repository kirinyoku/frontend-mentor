{"version":3,"sources":["script.js"],"names":["currentGuessCount","tileNumber","currentGuess","document","querySelector","concat","guessTiles","querySelectorAll","keyboardKeys","controller","AbortController","signal","letterPattern","words","addAnimDelay","i","delay","tileWrapperList","j","length","style","animationDelay","addAnimation","element","animName","dataset","animation","getKey","letter","typeLetter","currentTile","textContent","letters","eraseLetter","slice","checkLetters","state","includes","parentElement","checkGuess","guess","abort","localStorage","clear","addGuessToData","addGuessToStorage","setItem","getItem","submitGuess","window","addEventListener","_localStorage$getItem","split","join","e","key","test","toLocaleLowerCase","dataKey","currentTarget"],"mappings":"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","file":"script.js","sourcesContent":["// guess counter\r\nlet currentGuessCount = 1;\r\n// tile counter\r\nlet tileNumber = 0;\r\n// current row of guess\r\nlet currentGuess = document.querySelector(`#guess${currentGuessCount}`);\r\n// array of tiles in the current row of guess\r\nlet guessTiles = document.querySelectorAll(`#guess${currentGuessCount} .guess__tile`);\r\n// array of keyboard keys\r\nconst keyboardKeys = document.querySelectorAll('.keyboard__key');\r\n// controller for event listener \r\nconst controller = new AbortController();\r\nconst { signal } = controller;\r\n// regular expression to test a string for a letter\r\nconst letterPattern = /^[A-Za-z][A-Za-z0-9]*$/;\r\n\r\nconst words = ['cream'];\r\n\r\n// adding animation-delay to the tile wrappers (to animate the flipping of tiles)\r\nconst addAnimDelay = () => {\r\n\tfor (let i = 1; i <= 6; i++) {\r\n\t\tlet delay = 0;\r\n\t\tconst tileWrapperList = document.querySelectorAll(`#guess${i} > div`);\r\n\t\tfor (let j = 0; j < tileWrapperList.length; j++){\r\n\t\t\ttileWrapperList[j].style.animationDelay = `${delay}ms`;\r\n\t\t\tdelay += 150;\r\n\t\t};\r\n\t};\r\n};\r\n\r\nconst addAnimation = (element, animName) => {\r\n\telement.dataset.animation = animName;\r\n};\r\n\r\nconst getKey = (letter) => {\r\n\treturn document.querySelector(`.keyboard__key[data-key=${letter}]`);\r\n}\r\n\r\nconst typeLetter = (letter) => {\r\n  if (tileNumber <= 4) {\r\n\t\tlet currentTile = guessTiles[tileNumber];\r\n    addAnimation(currentTile, 'pop');\r\n    currentTile.textContent = letter;\r\n    currentGuess.dataset.letters += letter;\r\n    tileNumber += 1;\r\n  };\r\n};\r\n\r\nconst eraseLetter = () => {\r\n\tif (tileNumber > 0) {\r\n\t\ttileNumber -= 1;\r\n\t\tlet currentTile = guessTiles[tileNumber];\r\n\t\tcurrentTile.textContent = '';\r\n\t\tcurrentTile.dataset.animation = 'idle';\r\n\t\tcurrentGuess.dataset.letters = currentGuess.dataset.letters.slice(0, -1);\r\n\t};\r\n};\r\n\r\nconst checkLetters = () => {\r\n\tfor (let i = 0; i < guessTiles.length; i++) {\r\n\t\tlet letter = guessTiles[i].textContent;\r\n\t\tif (letter === words[0][i]) {\r\n\t\t\tguessTiles[i].dataset.state = 'correct';\r\n\t\t\tgetKey(letter).dataset.state = 'correct';\r\n\t\t} else if (words[0].includes(letter)) {\r\n\t\t\tguessTiles[i].dataset.state = 'present';\r\n\t\t\tgetKey(letter).dataset.state = 'present';\r\n\t\t} else {\r\n\t\t\tguessTiles[i].dataset.state = 'absent';\r\n\t\t\tgetKey(letter).dataset.state = 'absent';\r\n\t\t};\r\n\t\taddAnimation(guessTiles[i].parentElement, 'flip');\r\n\t\taddAnimation(guessTiles[i], 'idle');\r\n\t};\r\n};\r\n\r\nconst checkGuess = () => {\r\n\tif (currentGuess.dataset.guess === words[0] || currentGuessCount === 6) {\r\n\t\t// remove event listener from document\r\n\t\tcontroller.abort();\r\n\t\tlocalStorage.clear();\r\n\t} else {\r\n\t\ttileNumber = 0;\r\n\t\tcurrentGuessCount += 1;\r\n\t\tcurrentGuess = document.querySelector(`#guess${currentGuessCount}`);\r\n\t\tguessTiles = document.querySelectorAll(`#guess${currentGuessCount} .guess__tile`);\r\n\t};\r\n}\r\n\r\nconst addGuessToData = () => {\r\n\tcurrentGuess.dataset.guess = currentGuess.dataset.letters;\r\n}\r\n\r\nconst addGuessToStorage = () => {\r\n\tlocalStorage.setItem('guess', [localStorage.getItem('guess'), currentGuess.dataset.guess]);\r\n}\r\n\r\nconst submitGuess = () => {\r\n\tcheckLetters();\r\n\taddGuessToData();\r\n\taddGuessToStorage();\r\n\tcheckGuess();\r\n};\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n\taddAnimDelay();\r\n\tif (localStorage.getItem(\"guess\")?.length > 0) {\r\n\t\tfor (let i = 1; i <= localStorage.getItem(\"guess\").split(',').join('').length; i++){\r\n\t\t\ttypeLetter(localStorage.getItem(\"guess\").split(',').join('')[i-1]);\r\n\t\t\tif (i !== 0 && i % 5 === 0) {\r\n\t\t\t\tcheckLetters();\r\n\t\t\t\tcurrentGuess.dataset.guess = currentGuess.dataset.letters;\r\n\t\t\t\tcheckGuess();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n\tif (e.key.length === 1 && letterPattern.test(e.key)) {\r\n\t\ttypeLetter(e.key.toLocaleLowerCase());\r\n\t} else if (e.key === 'Backspace') {\r\n\t\teraseLetter();\r\n\t} else if (e.key === 'Enter' && tileNumber === 5 && currentGuessCount <= 6) {\r\n\t\tsubmitGuess();\r\n\t};\r\n}, { signal });\r\n\r\nfor (let i = 0; i < keyboardKeys.length; i++) {\r\n\tkeyboardKeys[i].addEventListener('click', (e) => {\r\n\t\tlet dataKey = e.currentTarget.dataset.key;\r\n\t\tif (dataKey.length === 1 && letterPattern.test(dataKey)) {\r\n\t\t\ttypeLetter(dataKey);\r\n\t\t} else if (dataKey === 'Backspace') {\r\n\t\t\teraseLetter();\r\n\t\t} else if (dataKey === 'Enter' && tileNumber === 5 && currentGuessCount <= 6) {\r\n\t\t\tsubmitGuess();\r\n\t\t};\r\n\t});\r\n}\r\n"]}